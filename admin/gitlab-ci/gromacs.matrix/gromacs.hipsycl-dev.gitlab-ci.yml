# Test goal: build with hipSYCL (both CUDA and ROCm backends) to check SYCL code compatibility
# Test intents (should change rarely and conservatively):
#   OS: Ubuntu newest supported
#   Compiler: Clang
#   GPU: hipSYCL
#   Scope: configure, build
# Test implementation choices (free to change as needed):
#   OS: Ubuntu 20.04
#   Build type: RelWithAssert
#   Compiler: Clang 13 (from ROCm)
#   MPI: thread_MPI
#   SIMD: AVX2_256

gromacs:hipsycl-dev:configure:
  extends:
    - .gromacs:base:configure
    - .use-clang:base
    - .use-sycl
    - .rules:merge-and-post-merge-acceptance
  image: ${CI_REGISTRY}/gromacs/gromacs/ci-ubuntu-20.04-llvm-12-cuda-11.4.1-hipsycl-7a309b808-rocm-4.3
  variables:
    CMAKE: /usr/local/cmake-3.18.4/bin/cmake
    CMAKE_SIMD_OPTIONS: "-DGMX_SIMD=AVX2_256"
    CMAKE_BUILD_TYPE_OPTIONS: "-DCMAKE_BUILD_TYPE=RelWithAssert"
    # Override the default clang compiler to the one provided by ROCm
    # Note that this compiler can only build for HIP targets. If this
    # changes (or we build our own clang) then it would be nice to
    # reinstate CUDA targets in -DHIPSYCL_TARGETS below.
    CMAKE_COMPILER_SCRIPT: -DCMAKE_C_COMPILER=/opt/rocm/llvm/bin/clang -DCMAKE_CXX_COMPILER=/opt/rocm/llvm/bin/clang++
    CMAKE_GPU_OPTIONS: "-DGMX_GPU=SYCL -DGMX_SYCL_HIPSYCL=ON -DHIPSYCL_TARGETS='hip:gfx900'"
    # Unset COMPILER_LAUNCHER (previously set to ccache) because it conflicts with hipSYCL's syclcc-launcher
    CMAKE_EXTRA_OPTIONS: "-DCMAKE_C_COMPILER_LAUNCHER= -DCMAKE_CXX_COMPILER_LAUNCHER="
    COMPILER_MAJOR_VERSION: 13

gromacs:hipsycl-dev:build:
  extends:
    - .variables:default
    - .gromacs:base:build
    - .before_script:default
    # Not using ccache because it plays poorly with syclcc-launcher
    - .rules:merge-and-post-merge-acceptance
  image: ${CI_REGISTRY}/gromacs/gromacs/ci-ubuntu-20.04-llvm-12-cuda-11.4.1-hipsycl-7a309b808-rocm-4.3
  variables:
    CMAKE: /usr/local/cmake-3.18.4/bin/cmake
  tags:
    - k8s-scilifelab
  needs:
    - job: gromacs:hipsycl-dev:configure

